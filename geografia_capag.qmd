---
title: "Mapas da CAPAG"
author: "Fernando Barbalho"
format: pptx
editor: visual
execute:
  cache: true
---

```{r}
library(tidyverse)
library(colorspace)
library(patchwork)
library(reshape2)
library(sf)


mapa_municipios<- rio::import("mapa_municipios.RDS")
sedes_municipios<- rio::import("sedes_municipios.RDS")
estados<- rio::import("estados.RDS")
brasil<- rio::import("brasil.RDS")
ibge2022<- rio::import("ibge2022.RDS")
dados_capag_2022 <- rio::import("dados_capag_2022.RDS")
regic_trabalho<- rio::import("regic_trabalho.RDS")


```

## Distribuição das notas

```{r}
dados_capag_2022 %>%
  ggplot() +
  geom_bar(aes(y=sort(capag_oficial, decreasing = TRUE))) +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  )
  
```

## Distribuição nos estados - ranking total

```{r}
dados_capag_2022 %>%
  summarise(.by = c("uf","capag_oficial"),
            quantidade = n()) %>%
  mutate(uf = reorder(uf, quantidade)) %>%
  ggplot() +
  geom_col(aes(y=uf, x= quantidade, fill= capag_oficial)) +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  )
```

## Distribuição nos estados - proporção notas

```{r}
dados_capag_2022 %>%
  summarise(.by = c("uf","capag_oficial"),
            quantidade = n()) %>%
  mutate(uf = reorder(uf, quantidade)) %>%
  ggplot() +
  geom_col(aes(y=uf, x= quantidade, fill= capag_oficial),position = "fill") +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  )
```

## Distribuição anormal nos estados

```{r}


### Testes de chi quadrado

teste_chi<-
chisq.test(dados_capag_2022$uf, dados_capag_2022$capag_oficial, simulate.p.value = TRUE)

residuo_teste<-
as_tibble(teste_chi[["stdres"]])

names(residuo_teste) <- c("uf","capag_oficial","n")

residuo_teste %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem, fill= capag_oficial), color = "black")+
  geom_col() +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes",
       fill= "Nota CAPAG")


```

## Distribuição anormal nos estados - Diferenças

```{r}

# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

# Calculate the difference between observed and expected values
expected <- subset(data, tipo == 'Esperado')
observed <- subset(data, tipo != 'Esperado')

# Merge observed and expected datasets by 'uf' and 'capag_oficial'
merged_data <- merge(expected, observed, by = c("uf", "capag_oficial"))

# Calculate the difference
merged_data$difference <- merged_data$n.y - merged_data$n.x

# Plot the heatmap using ggplot2
ggplot(merged_data, aes(x = capag_oficial, y = uf, fill = difference)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  geom_text(aes(label = sprintf("%.2f", difference)), size = 3) +
  labs(title = "Diferença entre n observado e esperado",
       x = "Categoria CAPAG",
       y = "Estado",
       fill = "Diferença") +
  theme_light()

```

## Distribuição anormal nos estados - CAPAG A

```{r}
residuo_teste %>%
  filter(capag_oficial == "A") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG A")

```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}

#Busca ufs relevantes para nota A com desvio padrão positivo

ufs_a<- 
(residuo_teste %>%
  filter(capag_oficial == "A") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_a, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "A",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf %in% ufs_a) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2


```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}
m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      filter(uf=="RS") %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state=="RS",], fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf == "RS") %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state=="RS",], fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2

```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}
#Busca ufs relevantes para nota A com desvio padrão negativo

ufs_a<- 
(residuo_teste %>%
  filter(capag_oficial == "A") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_a, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "A",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf %in% ufs_a) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2

```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}


m1<-
df_sample_esperado%>%
  filter(abbrev_state == "BA") %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state =="BA",], fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf %in% "BA") %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state=="BA",], fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


## Distribuição nos estados - CAPAG B

```{r}
residuo_teste %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG B")

```

## Mapa distribuição anormal nos estados - CAPAG B

```{r}
#Busca ufs relevantes para nota B com desvio padrão positivo

ufs_b<- 
(residuo_teste %>%
  filter(capag_oficial == "B") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_b, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "B",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "B",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "B",
           uf %in% ufs_b) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```

## Mapa distribuição anormal nos estados - CAPAG B

```{r}
#Busca ufs relevantes para nota B com desvio padrão negativo

ufs_b<- 
(residuo_teste %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_b, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "B",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "B",
           uf %in% ufs_b) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```



## Distribuição nos estados - CAPAG C

```{r}
residuo_teste %>%
  filter(capag_oficial == "C") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG C")
```


## Mapa distribuição anormal nos estados - CAPAG C

```{r}
#Busca ufs relevantes para nota B com desvio padrão positivo

ufs_c<- 
(residuo_teste %>%
  filter(capag_oficial == "C") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_c, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "C",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "C",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "C",
           uf %in% ufs_c) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


## Mapa distribuição anormal nos estados - CAPAG C
```{r}
#Busca ufs relevantes para nota B com desvio padrão negativo

ufs_c<- 
(residuo_teste %>%
  filter(capag_oficial == "C") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_c, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "C",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "C",
           uf %in% ufs_c) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2

```


## Distribuição nos estados - CAPAG D

```{r}
residuo_teste %>%
  filter(capag_oficial == "D") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG D")
```

## Distribuição nos estados - CAPAG não determinada

```{r}
residuo_teste %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não determinada")
```

## Mapa distribuição anormal nos estados - Nota não definida

```{r}
#Busca ufs relevantes para nota B com desvio padrão positivo

ufs_nd<- 
(residuo_teste %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_nd, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "n.d.",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "n.d.",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "n.d.",
           uf %in% ufs_nd) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```

## Mapa distribuição anormal nos estados - Nota não definida

```{r}
#Busca ufs relevantes para nota não definida com desvio padrão negativo

ufs_nd<- 
(residuo_teste %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_nd, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "n.d.",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "n.d.",
           uf %in% ufs_nd) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


## Distribuição por hierarquia de Regiões de influência

```{r}
capag_regic<-
  dados_capag_2022 %>%
  rename(cod_cidade= cod_ibge) %>%
  left_join(regic_trabalho) %>%
  mutate(nivel_hierarquia = ifelse(is.na(nivel_hierarquia),0,nivel_hierarquia),
         nome_nivel_hierarquia = ifelse(is.na(nome_nivel_hierarquia),"Arranjo populacional", nome_nivel_hierarquia))

capag_regic_trabalho<-
capag_regic %>%
  mutate(nivel_hierarquia = ifelse(str_sub(nivel_hierarquia,1,1)=="1","1",nivel_hierarquia),
         nome_nivel_hierarquia = ifelse(nivel_hierarquia == "1", "Metrópole",nome_nivel_hierarquia ),
         nh = paste(nivel_hierarquia, nome_nivel_hierarquia, sep = " - "))


#teste chi_quadrado

teste_chi_capag_regic<-
chisq.test(capag_regic_trabalho$nh, capag_regic_trabalho$capag_oficial,  simulate.p.value = TRUE)


residuo_teste_capag_regic<-
  as_tibble(teste_chi_capag_regic[["stdres"]], .name_repair= make.names)

names(residuo_teste_capag_regic) <- c("nivel_hierarquico","capag_oficial","n")

residuo_teste_capag_regic %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem, fill= capag_oficial), color = "black")+
  geom_col() +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes",
       fill= "Nota CAPAG")



```

## Distribuição anormal nos estados - Diferenças

```{r}

observado_teste_capag_regic<-
  as_tibble(teste_chi_capag_regic[["observed"]], .name_repair= make.names)


names(observado_teste_capag_regic) <- c("nivel_hierarquico","capag_oficial","n")

observado_teste_capag_regic$tipo = "Observado"



esperado_teste_capag_regic<-
  as_tibble(teste_chi_capag_regic[["expected"]], .name_repair= make.names)

niveis_regic<- unique(observado_teste_capag_regic$nivel_hierarquico)

esperado_teste_capag_regic$nivel_hierarquico <- niveis_regic

esperado_teste_capag_regic<-
esperado_teste_capag_regic %>%
  pivot_longer(cols=1:5, names_to = "capag_oficial", values_to = "n")

esperado_teste_capag_regic$tipo = "Esperado"

df_dados_regic_capag<-
  bind_rows(observado_teste_capag_regic, esperado_teste_capag_regic)


# Read the data
data <- df_dados_regic_capag

# Calculate the difference between observed and expected values
expected <- subset(data, tipo == 'Esperado')
observed <- subset(data, tipo != 'Esperado')

# Merge observed and expected datasets by 'uf' and 'capag_oficial'
merged_data <- merge(expected, observed, by = c("nivel_hierarquico", "capag_oficial"))

# Calculate the difference
merged_data$difference <- merged_data$n.y - merged_data$n.x

# Plot the heatmap using ggplot2
ggplot(merged_data, aes(x = capag_oficial, y = nivel_hierarquico, fill = difference)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  geom_text(aes(label = sprintf("%.2f", difference)), size = 3) +
  labs(title = "Diferença entre n observado e esperado",
       x = "Categoria CAPAG",
       y = "Estado",
       fill = "Diferença") +
  theme_light()



```

## Distribuição anormal nos níveis hierárquicos - CAPAG A

```{r}
residuo_teste_capag_regic %>%
  filter(capag_oficial == "A") %>%
  filter(n<=-2 | n>=2) %>%
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col(width = 0.7) +  # adjust width to increase space between bars
  geom_vline(xintercept = c(-2,2), color = "white") +
  geom_text(aes(x=0, y=ordem, label=nivel_hierarquico), color = "white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não definida")

```

## Distribuição anormal nos níveis hierárquicos - Arranos populacionais x  CAPAG A

```{r}

#Busca ufs relevantes para nota A com desvio padrão positivo

niveis_a<- 
(residuo_teste_capag_regic %>%
  filter(capag_oficial == "A") %>%
  filter(n>=2))$nivel_hierarquico 


# Read the data
data <- df_dados_regic_capag

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(niveis_a, function(a_nivel){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "A",
           nivel_hierarquico == a_nivel))$n
  
  quantidade<- round(quantidade)
  
  
  capag_regic_trabalho %>%
    filter(capag_oficial == "A",
           nh == a_nivel) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(capag_oficial == "A",
           nh %in% niveis_a) %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2


```



## Distribuição anormal nos níveis hierárquicos - CAPAG não definido

```{r}
residuo_teste_capag_regic %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n<=-2 | n>=2) %>%
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col(width = 0.7) +  # adjust width to increase space between bars
  geom_vline(xintercept = c(-2,2), color = "white") +
  geom_text(aes(x=0, y=ordem, label=nivel_hierarquico), color = "white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não definida")


```

## Distribuição anormal nos níveis hierárquicos - Centros locais x  CAPAG n.d

```{r}

#Busca ufs relevantes para nota A com desvio padrão positivo

niveis_nd<- 
(residuo_teste_capag_regic %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n>=2))$nivel_hierarquico 


# Read the data
data <- df_dados_regic_capag

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(niveis_nd, function(a_nivel){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "n.d.",
           nivel_hierarquico == a_nivel))$n
  
  quantidade<- round(quantidade)
  
  
  capag_regic_trabalho %>%
    filter(capag_oficial == "A",
           nh == a_nivel) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(capag_oficial == "n.d.",
           nh %in% niveis_nd) %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2


```


## Distribuição anormal nos níveis hierárquicos - CAPAG B

```{r}
residuo_teste_capag_regic %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2 | n>=2) %>%
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col(width = 0.7) +  # adjust width to increase space between bars
  geom_vline(xintercept = c(-2,2), color = "white") +
  geom_text(aes(x=0, y=ordem, label=nivel_hierarquico), color = "white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não definida")


```

## Distribuição anormal nos níveis hierárquicos - Centro local x CAPAG B 

```{r}
#Busca ufs relevantes para nota não definida com desvio padrão negativo

niveis_b<- 
(residuo_teste_capag_regic %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2))$nivel_hierarquico 


# Read the data
data <- df_dados_regic_capag

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(niveis_b, function(a_nivel){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "B",
           nivel_hierarquico == a_nivel))$n
  
  print(quantidade)
  
  quantidade<- round(quantidade)
  
  
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(nh %in% niveis_b) %>%
      slice_sample(n=quantidade) %>%
      rename(code_muni = cod_cidade)
  )
})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(capag_oficial == "B",
           nh %in% niveis_b) %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## Distribuição por clusters espaciais

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

## Riscos e população

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:
