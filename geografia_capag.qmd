---
title: "Mapas da CAPAG"
author: "Fernando Barbalho"
format: pptx
editor: visual
execute:
  cache: true
---

```{r}
library(tidyverse)
library(colorspace)
library(patchwork)
library(reshape2)
library(sf)
library(spdep)


mapa_municipios<- rio::import("mapa_municipios.RDS")
sedes_municipios<- rio::import("sedes_municipios.RDS")
estados<- rio::import("estados.RDS")
brasil<- rio::import("brasil.RDS")
ibge2022<- rio::import("ibge2022.RDS")
dados_capag_2022 <- rio::import("dados_capag_2022.RDS")
regic_trabalho<- rio::import("regic_trabalho.RDS")


```

## Distribuição das notas

```{r}
dados_capag_2022 %>%
  ggplot() +
  geom_bar(aes(y=sort(capag_oficial, decreasing = TRUE))) +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  )
  
```

## Distribuição nos estados - ranking total

```{r}
dados_capag_2022 %>%
  summarise(.by = c("uf","capag_oficial"),
            quantidade = n()) %>%
  mutate(uf = reorder(uf, quantidade)) %>%
  ggplot() +
  geom_col(aes(y=uf, x= quantidade, fill= capag_oficial)) +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  )
```

## Distribuição nos estados - proporção notas

```{r}
dados_capag_2022 %>%
  summarise(.by = c("uf","capag_oficial"),
            quantidade = n()) %>%
  mutate(uf = reorder(uf, quantidade)) %>%
  ggplot() +
  geom_col(aes(y=uf, x= quantidade, fill= capag_oficial),position = "fill") +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  )
```

## Distribuição anormal nos estados

```{r}


### Testes de chi quadrado

teste_chi<-
chisq.test(dados_capag_2022$uf, dados_capag_2022$capag_oficial, simulate.p.value = TRUE)

residuo_teste<-
as_tibble(teste_chi[["stdres"]])

names(residuo_teste) <- c("uf","capag_oficial","n")

residuo_teste %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem, fill= capag_oficial), color = "black")+
  geom_col() +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes",
       fill= "Nota CAPAG")


```

## Distribuição anormal nos estados - Diferenças

```{r}

# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

# Calculate the difference between observed and expected values
expected <- subset(data, tipo == 'Esperado')
observed <- subset(data, tipo != 'Esperado')

# Merge observed and expected datasets by 'uf' and 'capag_oficial'
merged_data <- merge(expected, observed, by = c("uf", "capag_oficial"))

# Calculate the difference
merged_data$difference <- merged_data$n.y - merged_data$n.x

# Plot the heatmap using ggplot2
ggplot(merged_data, aes(x = capag_oficial, y = uf, fill = difference)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  geom_text(aes(label = sprintf("%.2f", difference)), size = 3) +
  labs(title = "Diferença entre n observado e esperado",
       x = "Categoria CAPAG",
       y = "Estado",
       fill = "Diferença") +
  theme_light()

```

## Distribuição anormal nos estados - CAPAG A

```{r}
residuo_teste %>%
  filter(capag_oficial == "A") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG A")

```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}

#Busca ufs relevantes para nota A com desvio padrão positivo

ufs_a<- 
(residuo_teste %>%
  filter(capag_oficial == "A") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_a, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "A",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf %in% ufs_a) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2


```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}
m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      filter(uf=="RS") %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state=="RS",], fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf == "RS") %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state=="RS",], fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2

```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}
#Busca ufs relevantes para nota A com desvio padrão negativo

ufs_a<- 
(residuo_teste %>%
  filter(capag_oficial == "A") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_a, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "A",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf %in% ufs_a) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2

```

## Mapa distribuição anormal nos estados - CAPAG A

```{r}


m1<-
df_sample_esperado%>%
  filter(abbrev_state == "BA") %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state =="BA",], fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "A",
           uf %in% "BA") %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados[estados$abbrev_state=="BA",], fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


## Distribuição nos estados - CAPAG B

```{r}
residuo_teste %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG B")

```

## Mapa distribuição anormal nos estados - CAPAG B

```{r}
#Busca ufs relevantes para nota B com desvio padrão positivo

ufs_b<- 
(residuo_teste %>%
  filter(capag_oficial == "B") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_b, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "B",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "B",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "B",
           uf %in% ufs_b) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```

## Mapa distribuição anormal nos estados - CAPAG B

```{r}
#Busca ufs relevantes para nota B com desvio padrão negativo

ufs_b<- 
(residuo_teste %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_b, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "B",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "B",
           uf %in% ufs_b) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```



## Distribuição nos estados - CAPAG C

```{r}
residuo_teste %>%
  filter(capag_oficial == "C") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG C")
```


## Mapa distribuição anormal nos estados - CAPAG C

```{r}
#Busca ufs relevantes para nota B com desvio padrão positivo

ufs_c<- 
(residuo_teste %>%
  filter(capag_oficial == "C") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_c, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "C",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "C",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "C",
           uf %in% ufs_c) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


## Mapa distribuição anormal nos estados - CAPAG C
```{r}
#Busca ufs relevantes para nota B com desvio padrão negativo

ufs_c<- 
(residuo_teste %>%
  filter(capag_oficial == "C") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_c, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "C",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "C",
           uf %in% ufs_c) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2

```


## Distribuição nos estados - CAPAG D

```{r}
residuo_teste %>%
  filter(capag_oficial == "D") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG D")
```

## Distribuição nos estados - CAPAG não determinada

```{r}
residuo_teste %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col() +
  geom_text(aes(label= uf), color = "white") +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Pastel 1")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não determinada")
```

## Mapa distribuição anormal nos estados - Nota não definida

```{r}
#Busca ufs relevantes para nota B com desvio padrão positivo

ufs_nd<- 
(residuo_teste %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n>=2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_nd, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "n.d.",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  dados_capag_2022 %>%
    filter(capag_oficial == "n.d.",
           uf == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "n.d.",
           uf %in% ufs_nd) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```

## Mapa distribuição anormal nos estados - Nota não definida

```{r}
#Busca ufs relevantes para nota não definida com desvio padrão negativo

ufs_nd<- 
(residuo_teste %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n<=-2))$uf 


# Read the data
data <- read.csv('resultado_chi_quadrado.csv')

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(ufs_nd, function(a_uf){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "n.d.",
           uf == a_uf))$n
  
  quantidade<- round(quantidade)
  
  
  sedes_municipios %>%
    filter(abbrev_state == a_uf) %>%
    slice_sample(n= quantidade)

})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      dados_capag_2022 %>%
    filter(capag_oficial == "n.d.",
           uf %in% ufs_nd) %>%
      rename(code_muni = cod_ibge)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


## Distribuição por hierarquia de Regiões de influência

```{r}
capag_regic<-
  dados_capag_2022 %>%
  rename(cod_cidade= cod_ibge) %>%
  left_join(regic_trabalho) %>%
  mutate(nivel_hierarquia = ifelse(is.na(nivel_hierarquia),0,nivel_hierarquia),
         nome_nivel_hierarquia = ifelse(is.na(nome_nivel_hierarquia),"Arranjo populacional", nome_nivel_hierarquia))

capag_regic_trabalho<-
capag_regic %>%
  mutate(nivel_hierarquia = ifelse(str_sub(nivel_hierarquia,1,1)=="1","1",nivel_hierarquia),
         nome_nivel_hierarquia = ifelse(nivel_hierarquia == "1", "Metrópole",nome_nivel_hierarquia ),
         nh = paste(nivel_hierarquia, nome_nivel_hierarquia, sep = " - "))


#teste chi_quadrado

teste_chi_capag_regic<-
chisq.test(capag_regic_trabalho$nh, capag_regic_trabalho$capag_oficial,  simulate.p.value = TRUE)


residuo_teste_capag_regic<-
  as_tibble(teste_chi_capag_regic[["stdres"]], .name_repair= make.names)

names(residuo_teste_capag_regic) <- c("nivel_hierarquico","capag_oficial","n")

residuo_teste_capag_regic %>%
  filter(n<=-2 | n>=2) %>%   
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem, fill= capag_oficial), color = "black")+
  geom_col() +
  geom_vline(xintercept = c(-2,2), color = "white") +
  scale_fill_discrete_qualitative("Dark 3")+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
    
  ) +
  labs(title = "Resíduos relevantes",
       fill= "Nota CAPAG")



```

## Distribuição anormal nos estados - Diferenças

```{r}

observado_teste_capag_regic<-
  as_tibble(teste_chi_capag_regic[["observed"]], .name_repair= make.names)


names(observado_teste_capag_regic) <- c("nivel_hierarquico","capag_oficial","n")

observado_teste_capag_regic$tipo = "Observado"



esperado_teste_capag_regic<-
  as_tibble(teste_chi_capag_regic[["expected"]], .name_repair= make.names)

niveis_regic<- unique(observado_teste_capag_regic$nivel_hierarquico)

esperado_teste_capag_regic$nivel_hierarquico <- niveis_regic

esperado_teste_capag_regic<-
esperado_teste_capag_regic %>%
  pivot_longer(cols=1:5, names_to = "capag_oficial", values_to = "n")

esperado_teste_capag_regic$tipo = "Esperado"

df_dados_regic_capag<-
  bind_rows(observado_teste_capag_regic, esperado_teste_capag_regic)


# Read the data
data <- df_dados_regic_capag

# Calculate the difference between observed and expected values
expected <- subset(data, tipo == 'Esperado')
observed <- subset(data, tipo != 'Esperado')

# Merge observed and expected datasets by 'uf' and 'capag_oficial'
merged_data <- merge(expected, observed, by = c("nivel_hierarquico", "capag_oficial"))

# Calculate the difference
merged_data$difference <- merged_data$n.y - merged_data$n.x

# Plot the heatmap using ggplot2
ggplot(merged_data, aes(x = capag_oficial, y = nivel_hierarquico, fill = difference)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
  geom_text(aes(label = sprintf("%.2f", difference)), size = 3) +
  labs(title = "Diferença entre n observado e esperado",
       x = "Categoria CAPAG",
       y = "Estado",
       fill = "Diferença") +
  theme_light()



```

## Distribuição anormal nos níveis hierárquicos - CAPAG A

```{r}
residuo_teste_capag_regic %>%
  filter(capag_oficial == "A") %>%
  filter(n<=-2 | n>=2) %>%
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col(width = 0.7) +  # adjust width to increase space between bars
  geom_vline(xintercept = c(-2,2), color = "white") +
  geom_text(aes(x=0, y=ordem, label=nivel_hierarquico), color = "white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não definida")

```

## Distribuição anormal nos níveis hierárquicos - Arranos populacionais x  CAPAG A

```{r}

#Busca ufs relevantes para nota A com desvio padrão positivo

niveis_a<- 
(residuo_teste_capag_regic %>%
  filter(capag_oficial == "A") %>%
  filter(n>=2))$nivel_hierarquico 


# Read the data
data <- df_dados_regic_capag

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(niveis_a, function(a_nivel){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "A",
           nivel_hierarquico == a_nivel))$n
  
  quantidade<- round(quantidade)
  
  
  capag_regic_trabalho %>%
    filter(capag_oficial == "A",
           nh == a_nivel) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(capag_oficial == "A",
           nh %in% niveis_a) %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2


```



## Distribuição anormal nos níveis hierárquicos - CAPAG não definido

```{r}
residuo_teste_capag_regic %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n<=-2 | n>=2) %>%
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col(width = 0.7) +  # adjust width to increase space between bars
  geom_vline(xintercept = c(-2,2), color = "white") +
  geom_text(aes(x=0, y=ordem, label=nivel_hierarquico), color = "white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não definida")


```

## Distribuição anormal nos níveis hierárquicos - Centros locais x  CAPAG n.d

```{r}

#Busca ufs relevantes para nota A com desvio padrão positivo

niveis_nd<- 
(residuo_teste_capag_regic %>%
  filter(capag_oficial == "n.d.") %>%
  filter(n>=2))$nivel_hierarquico 


# Read the data
data <- df_dados_regic_capag

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(niveis_nd, function(a_nivel){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "n.d.",
           nivel_hierarquico == a_nivel))$n
  
  quantidade<- round(quantidade)
  
  
  capag_regic_trabalho %>%
    filter(capag_oficial == "A",
           nh == a_nivel) %>%
    slice_sample(n= quantidade)

})



m1<-
sedes_municipios %>%
  inner_join(
    df_sample_esperado %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(capag_oficial == "n.d.",
           nh %in% niveis_nd) %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2


```


## Distribuição anormal nos níveis hierárquicos - CAPAG B

```{r}
residuo_teste_capag_regic %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2 | n>=2) %>%
  mutate(rank = rank(-abs(n))) %>%
  mutate(ordem = as.factor(rank)) %>%
  mutate(ordem = fct_reorder(ordem, rank, .desc=TRUE) ) %>%
  ggplot(aes(x=n,y=ordem), color = "black")+
  geom_col(width = 0.7) +  # adjust width to increase space between bars
  geom_vline(xintercept = c(-2,2), color = "white") +
  geom_text(aes(x=0, y=ordem, label=nivel_hierarquico), color = "white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    axis.text.y = element_blank(),
    legend.key = element_rect(fill = "black")
  ) +
  labs(title = "Resíduos relevantes - Nota CAPAG não definida")


```

## Distribuição anormal nos níveis hierárquicos - Centro local x CAPAG B 

```{r}
#Busca ufs relevantes para nota não definida com desvio padrão negativo

niveis_b<- 
(residuo_teste_capag_regic %>%
  filter(capag_oficial == "B") %>%
  filter(n<=-2))$nivel_hierarquico 


# Read the data
data <- df_dados_regic_capag

#monta dataframe com municipíos esperados

df_sample_esperado<-
purrr::map_dfr(niveis_b, function(a_nivel){
  quantidade<-
    (data %>%
    filter(tipo=="Esperado",
           capag_oficial == "B",
           nivel_hierarquico == a_nivel))$n
  
  quantidade<- round(quantidade)
  
  
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(nh %in% niveis_b) %>%
      slice_sample(n=quantidade) %>%
      rename(code_muni = cod_cidade)
  )
})



m1<-
df_sample_esperado%>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )


m2<-
sedes_municipios %>%
  inner_join(
      capag_regic_trabalho %>%
    filter(capag_oficial == "B",
           nh %in% niveis_b) %>%
      rename(code_muni = cod_cidade)
  ) %>%
  ggplot()+
  geom_sf( pch=21, fill="#ff6600",  color="#ff6600", size= 0.5) +
  #geom_sf(data = sedes,pch=21,  fill=point_color, color = point_color, size= 0.5 )+
  geom_sf(data= estados, fill=NA, color="white") +
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )
# 
# 
m1+m2
```


## Distribuição por clusters espaciais

```{r}
gera_clusters_espaciais<- function(.data, nome_coluna){



  # select column to work with
  s <- subset(.data, select=nome_coluna)

  names(s)[1]<-"indicador"



  s %>%
    ggplot() +
    geom_histogram(aes(x=!!sym(nome_coluna)),color="white")

  s %>%
    mutate(tipo_indicador= nome_coluna) %>%
    ggplot() +
    geom_boxplot(aes(x=tipo_indicador, y=!!sym(nome_coluna)))



  # define neighbor
  nb <- poly2nb(s, queen=TRUE) # here nb list all ID numbers of neighbors;

  # assign weights to neighbors
  lw <- nb2listw(nb, style="W", zero.policy=TRUE) # Row-standardized weights


  # # compute neighbor average
  # inc.lag <- lag.listw(lw, s$indicador_1, zero.policy=TRUE)
  #
  # # plot polygons vs lags
  # plot(inc.lag ~ s$indicador_1, pch=16, asp=1)
  # M1 <- lm(inc.lag ~ s$indicador_1)
  # abline(M1, col="blue")
  #
  # # access Moran's coeff
  # coef(M1)[2]
  #
  # # calculating Moran coeff with one line
  # I <- moran(s$indicador_1, lw, length(nb), Szero(lw), zero.policy=TRUE)[1]
  #
  # I
  #
  #
  #
  #
  # # hypothesis test with moran.test function
  # moran.test(s$indicador_1,lw, alternative="greater", zero.policy=TRUE)
  #
  # # using Monte-Carlo simulation
  # MC<- moran.mc(s$indicador_1, lw, nsim=999, alternative="greater", zero.policy=TRUE)
  #
  # # View results (including p-value)
  # MC# plot Null distribution
  # plot(MC)



  lisa<- spdep::localmoran(s$indicador, lw, zero.policy=TRUE)

  df_lisa<- as_tibble(lisa)



  df_lisa<- janitor::clean_names(df_lisa)


  df_lisa_significante<-
    df_lisa %>%
    mutate(id = row_number())%>%
    filter(pr_z_e_ii <=0.05)


  df_vizinhos<-
    purrr::map_dfr(df_lisa_significante$id, function(a_id){


      tibble(id= c(a_id, lw[["neighbours"]][[a_id]]),
             id_referencia= rep(a_id,NROW(lw[["neighbours"]][[a_id]])+1),
             ii=  rep(df_lisa_significante$ii[which(df_lisa_significante$id== a_id)], NROW(lw[["neighbours"]][[a_id]])+1),
             z_ii=  rep(df_lisa_significante$z_ii[which(df_lisa_significante$id== a_id)], NROW(lw[["neighbours"]][[a_id]])+1))

    })



  id_central<-
    unique(df_vizinhos$id_referencia)

  ###Seleciona os clusters em que o id_referencia se mantém como referência do próprio cluster
  clusters_selecionado<-
    df_vizinhos %>%
    filter(id %in% id_central) %>%
    group_by(id) %>%
    filter(abs(z_ii) == max(abs(z_ii))) %>%
    ungroup() %>%
    filter(id_referencia == id)



  id_referencia_selecao<- unique(clusters_selecionado$id_referencia)

  vizinhos_selecao<-
    df_vizinhos %>%
    filter(id_referencia %in% id_referencia_selecao)%>%
    group_by(id) %>%
    filter(abs(z_ii) == max(abs(z_ii))) %>%
    ungroup()

  ids_referencias_finais<-
    (vizinhos_selecao %>%
       summarise(.by = id_referencia,
                 quantidade = n()) %>%
       filter(quantidade >=2))$id_referencia


  df_clusters_espaciais<-
    .data %>%
    mutate(id = row_number())%>%
    inner_join(
      vizinhos_selecao %>%
        filter(id_referencia %in% ids_referencias_finais )
    )

  return(list(df_clusters_espaciais= df_clusters_espaciais,lw=lw))

}




agrupa_mapa_id_referencia<- function(.data, a_uf="", sinal=0, indicador){


  clusters_espaciais_trabalho<-
    .data[["df_clusters_espaciais"]]





  if (a_uf!=""){
    clusters_espaciais_trabalho <-
      clusters_espaciais_trabalho %>%
      filter(abbrev_state == a_uf)

  }

  if (sinal!=0){
    clusters_espaciais_trabalho <-
      clusters_espaciais_trabalho %>%
      filter(sign(z_ii) == sinal)

  }




  ids_referencia<- unique(clusters_espaciais_trabalho$id_referencia)
  vizinhos<-.data$lw$neighbours

  position<- which(names(clusters_espaciais_trabalho) == indicador)



  df_clusters_espaciais<- as_tibble(clusters_espaciais_trabalho)

  names(df_clusters_espaciais)[position] <- "indicador_selecionado"




  purrr::map_dfr(ids_referencia, function(a_id){



    z_ii_objeto<- unique(clusters_espaciais_trabalho$z_ii[clusters_espaciais_trabalho$id_referencia==a_id])
    ii_objeto<- unique(clusters_espaciais_trabalho$ii[clusters_espaciais_trabalho$id_referencia==a_id])
    media_indice<- mean(df_clusters_espaciais$indicador_selecionado[df_clusters_espaciais$id_referencia==a_id])
    cv<- sd(df_clusters_espaciais$indicador_selecionado[df_clusters_espaciais$id_referencia==a_id])/
        mean(df_clusters_espaciais$indicador_selecionado[df_clusters_espaciais$id_referencia==a_id])


    clusters_espaciais_trabalho %>%
      filter(id %in% c(a_id,vizinhos[[a_id]]))%>%
      group_by(id_referencia) %>%
      st_union() %>%
      as_tibble() %>%
      mutate(id_referencia =a_id,
             z_ii = z_ii_objeto,
             ii = ii_objeto,
             media_indice = media_indice,
             multiplicador = 1+runif(n=1),
             cv =cv)


  })


}

```


## Clusters convergentes indicador 1: distribuição

```{r}
#Estatísticas descritiva dos clusters

clusters_espaciais_1<-
  mapa_municipios[-2260,] %>%
  inner_join(
    dados_capag_2022 %>%
      filter(indicador_1<10) %>%
      rename(code_muni = cod_ibge)
  )%>%
  gera_clusters_espaciais(nome_coluna = "indicador_1")



df_mapa_agrupado_convergentes_1<-
  clusters_espaciais_1%>%
  agrupa_mapa_id_referencia(sinal = 1, indicador = "indicador_1")



##box-plot clusters convergentes
g1<- df_mapa_agrupado_convergentes_1 %>%
  mutate(grupo  = "convergente 1") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=media_indice))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  ) +
  labs(y="Média")


g2<- df_mapa_agrupado_convergentes_1 %>%
  mutate(grupo  = "convergente 1") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=cv))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )

g1+g2
```

## Clusters convergentes indicador 1: mapas

```{r}
m1<-
df_mapa_agrupado_convergentes_1 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= media_indice), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )+
  labs(fill="Média")


m2<-
  df_mapa_agrupado_convergentes_1 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= cv), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )

m1+m2

```



## Clusters divergentes indicador 1: distribuição

```{r}
#Estatísticas descritiva dos clusters



df_mapa_agrupado_divergentes_1<-
  clusters_espaciais_1%>%
  agrupa_mapa_id_referencia(sinal = -1, indicador = "indicador_1")



##box-plot clusters convergentes
g1<- df_mapa_agrupado_divergentes_1 %>%
  mutate(grupo  = "divergente 1") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=media_indice))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  ) +
  labs(y="Média")


g2<- df_mapa_agrupado_divergentes_1 %>%
  mutate(grupo  = "divergente 1") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=cv))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )

g1+g2
```

## Clusters divergentes indicador 1: mapas

```{r}
m1<-
df_mapa_agrupado_divergentes_1 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= media_indice), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )+
  labs(fill="Média")


m2<-
  df_mapa_agrupado_divergentes_1 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= cv), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )

m1+m2

```



## Clusters convergentes indicador 2: distribuição

```{r}
#Estatísticas descritiva dos clusters

clusters_espaciais_2<-
  mapa_municipios[-2260,] %>%
  inner_join(
    dados_capag_2022 %>%
      filter(indicador_2<10) %>%
      rename(code_muni = cod_ibge)
  )%>%
  gera_clusters_espaciais(nome_coluna = "indicador_2")



df_mapa_agrupado_convergentes_2<-
  clusters_espaciais_2%>%
  agrupa_mapa_id_referencia(sinal = 1, indicador = "indicador_2")



##box-plot clusters convergentes
g1<- df_mapa_agrupado_convergentes_2 %>%
  mutate(grupo  = "convergente 2") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=media_indice))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  ) +
  labs(y="Média")


g2<- df_mapa_agrupado_convergentes_2 %>%
  mutate(grupo  = "convergente 2") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=cv))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )

g1+g2
```

## Clusters convergentes indicador 2: mapas

```{r}
m1<-
df_mapa_agrupado_convergentes_2 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= media_indice), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )+
  labs(fill="Média")


m2<-
  df_mapa_agrupado_convergentes_2 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= cv), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )

m1+m2

```



## Clusters divergentes indicador 2: distribuição

```{r}
#Estatísticas descritiva dos clusters



df_mapa_agrupado_divergentes_2<-
  clusters_espaciais_2%>%
  agrupa_mapa_id_referencia(sinal = -1, indicador = "indicador_2")



##box-plot clusters convergentes
g1<- df_mapa_agrupado_divergentes_2 %>%
  mutate(grupo  = "divergente 2") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=media_indice))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  ) +
  labs(y="Média")


g2<- df_mapa_agrupado_divergentes_2 %>%
  mutate(grupo  = "divergente 2") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=cv))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )

g1+g2
```

## Clusters divergentes indicador 2: mapas

```{r}
m1<-
df_mapa_agrupado_divergentes_2 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= media_indice), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )+
  labs(fill="Média")


m2<-
  df_mapa_agrupado_divergentes_2 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= cv), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )

m1+m2

```


## Clusters convergentes indicador 3: distribuição

```{r}
#Estatísticas descritiva dos clusters

clusters_espaciais_3<-
  mapa_municipios[-2260,] %>%
  inner_join(
    dados_capag_2022 %>%
      filter(indicador_3<10) %>%
      rename(code_muni = cod_ibge)
  )%>%
  gera_clusters_espaciais(nome_coluna = "indicador_3")



df_mapa_agrupado_convergentes_3<-
  clusters_espaciais_3%>%
  agrupa_mapa_id_referencia(sinal = 1, indicador = "indicador_3")



##box-plot clusters convergentes
g1<- df_mapa_agrupado_convergentes_3 %>%
  mutate(grupo  = "convergente 3") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=media_indice))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  ) +
  labs(y="Média")


g2<- df_mapa_agrupado_convergentes_3 %>%
  mutate(grupo  = "convergente 3") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=cv))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )

g1+g2
```

## Clusters convergentes indicador 2: mapas

```{r}
m1<-
df_mapa_agrupado_convergentes_3 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= media_indice), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )+
  labs(fill="Média")


m2<-
  df_mapa_agrupado_convergentes_3 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= cv), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )

m1+m2

```



## Clusters divergentes indicador 3: distribuição

```{r}
#Estatísticas descritiva dos clusters



df_mapa_agrupado_divergentes_3<-
  clusters_espaciais_3%>%
  agrupa_mapa_id_referencia(sinal = -1, indicador = "indicador_3")



##box-plot clusters convergentes
g1<- df_mapa_agrupado_divergentes_3 %>%
  mutate(grupo  = "divergente 3") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=media_indice))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  ) +
  labs(y="Média")


g2<- df_mapa_agrupado_divergentes_3 %>%
  mutate(grupo  = "divergente 3") %>%
  ggplot() +
  geom_boxplot(aes(x=grupo, y=cv))+
  theme_light() +
  theme(
    #text = element_text(size=20),
    panel.background = element_rect(fill = "black"),
    panel.grid = element_blank(),
    axis.title.x = element_blank(),
    #axis.title.y = element_blank(),
    strip.background = element_rect(fill = "#505050"),
    strip.text = element_text(color = "white"),
    #axis.text = element_blank(),
    legend.key = element_rect(fill = "black")

  )

g1+g2
```

## Clusters divergentes indicador 2: mapas

```{r}
m1<-
df_mapa_agrupado_divergentes_3 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= media_indice), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )+
  labs(fill="Média")


m2<-
  df_mapa_agrupado_divergentes_3 %>%
  ggplot() +
  geom_sf(data=estados, fill= NA) +
  geom_sf(aes(geometry = geometry,  fill= cv), color=NA,  show.legend = TRUE) +
  scale_fill_continuous_sequential(palette = "Heat 2")+
  theme_void()+
  theme(
    panel.background = element_rect(fill = "black")
  )

m1+m2

```



## Dados ausentes para o indicador 3 e população 

```{r}
library(rpart)
library(rpart.plot)

# Load the data
# Create a binary target column for missing values in Indicador_3
dados_capag_2022$Indicador_3_Missing <- as.integer(is.na(dados_capag_2022$indicador_3))

# Prepare the dataset
# Drop the Indicador_3 and Município columns
data_tree_view <- dados_capag_2022[, (names(dados_capag_2022) %in% c("uf", "populacao", "nota_1", "nota_2", "Indicador_3_Missing"))]



# Generate the decision tree
fit <- rpart(Indicador_3_Missing ~ ., data=data_tree_view, method="class")

# Plot the decision tree
rpart.plot(fit, extra=101)

```


